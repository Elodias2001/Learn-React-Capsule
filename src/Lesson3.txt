import { useState } from "react";
import { Fragment } from "react";


function App() {
  const [count, setCount] = useState(0)
  
  const increment2 = () =>{
    setCount((count) => count + 1) // (0) => 0 + 1
    setCount((count) => count + 1) // (1) => 1 + 1
    setCount((count) => count + 1) // (2) => 2 + 1 

    //Faut préciser que la variable count n'est pas la meme que celle récuperer au travers de useState
    //Je peux tout a fait remplacer le count la par une variable c par exemple
    //Cela marcherait toujours
  }

  const increment = () =>{
    setCount(count + 1) // 0 + 1
    setCount(count + 1) // 0 + 1
    setCount(count + 1) // 0 + 1 
  }

  return  <Fragment>
     <p>Compteur : {count}</p>
     <button onClick={increment}>Incrémenter</button>
     <button onClick={increment2} hidden>Incrémenter2</button>
    </Fragment>
}


export default App

//On passe une valeur initiale a useState et comme notre compteur demarre a 0 
//et on met 0 dans le useState. Cela nous permet de recuperer dans un tableau 
// de taille 2, deux elements le premier est la variable count et le second sera 
//un setteur qui nous permettra de changer la valeur par la suite chez nous ce sera 
// setCount

// Prends la valeur de count et incrémente de 1
//Ici par exemple j'utilise le setteur setCount pour mettre a jour 
//count quand on actionne la fonction increment 

//Lors d'une console log React affiche deux fois les choses. C'est a cause du StrictMode de React qui rend les composants deux fois afin de vérifier les erreurs